chapter Basic Functions
Define some basic functions.

theorem The Empty Set Is a Function with Empty Domain
prove ⊆ ∅ × ∅ A
prove ∀ x ¬ ∈ x ∅
prove ∀ x → ∈ x ∅ ∃! y ∈ orderedPair x y ∅
prove function ∅ ∅ A
qed

theorem Function with a Singleton Domain
prove ∈ a singleton a
prove ∈ b singleton b
prove ∈ orderedPair a b × singleton a singleton b
prove ⊆ singleton orderedPair a b × singleton a singleton b
take x {
  assume ∈ x singleton a {
    prove = x a
    take y {
      assume ∈ orderedPair x y singleton orderedPair a b {
        prove = orderedPair x y orderedPair a b
        prove = y b
      }
      assume = y b {
        prove ∈ orderedPair a b singleton orderedPair a b
        prove ∈ orderedPair x b singleton orderedPair a b
        prove ∈ orderedPair x y singleton orderedPair a b
      }
    }
    prove ∃! y ∈ orderedPair x y singleton orderedPair a b
  }
}
prove function singleton orderedPair a b singleton a singleton b
qed

theorem Combine Functions
premise function f A B
premise function g C D
premise ∀ x → ∈ x ∩ A C = apply f x apply g x
prove ⊆ f × A B
prove ⊆ × A B × ∪ A C B
  via ⊆ A ∪ A C
prove ⊆ f × ∪ A C B
prove ⊆ × ∪ A C B × ∪ A C ∪ B D
  via ⊆ B ∪ B D
prove ⊆ f × ∪ A C ∪ B D

prove ⊆ g × C D
prove ⊆ × C D × ∪ A C D
  via ⊆ C ∪ A C
prove ⊆ g × ∪ A C D
prove ⊆ × ∪ A C D × ∪ A C ∪ B D
  via ⊆ D ∪ B D
prove ⊆ g × ∪ A C ∪ B D

prove ⊆ ∪ f g × ∪ A C ∪ B D

take x {
  assume ∈ x ∪ A C {
    prove ∨ ∈ x A ∈ x C
    assume ∈ x A {
      take y {
        assume ∈ orderedPair x y ∪ f g {
          prove ∨ ∈ orderedPair x y f ∈ orderedPair x y g
          assume ∈ orderedPair x y f {
            prove = y apply f x
          }
          assume ∈ orderedPair x y g {
            prove ∈ x C
            prove ∈ x ∩ A C
            prove = apply f x apply g x
            prove = y apply g x
            prove = y apply f x
          }
          prove = y apply f x
        }
      }
      prove ∈ orderedPair x apply f x f
      prove ∈ orderedPair x apply f x ∪ f g
      prove ∃! y ∈ orderedPair x y ∪ f g
    }
    assume ∈ x C {
      take y {
        assume ∈ orderedPair x y ∪ f g {
          prove ∨ ∈ orderedPair x y f ∈ orderedPair x y g
          assume ∈ orderedPair x y f {
            prove ∈ x A
            prove ∈ x ∩ A C
            prove = apply f x apply g x
            prove = y apply f x
            prove = y apply g x
          }
          assume ∈ orderedPair x y g {
            prove = y apply g x
          }
          prove = y apply g x
        }
      }
      prove ∈ orderedPair x apply g x g
      prove ∈ orderedPair x apply g x ∪ f g
      prove ∃! y ∈ orderedPair x y ∪ f g
    }
    prove ∃! y ∈ orderedPair x y ∪ f g
  }
}
prove function ∪ f g ∪ A C ∪ B D
qed

theorem Combine Disjoint Functions
premise function f A B
premise function g C D
premise = ∩ A C ∅
prove ∀ x ¬ ∈ x ∩ A C
  via ∀ x ¬ ∈ x ∅
prove ∀ x → ∈ x ∩ A C = apply f x apply g x
prove function ∪ f g ∪ A C ∪ B D
qed

theorem Extending a Function by One Value
premise function f A B
premise ¬ ∈ a A
premise ∈ b B
take x {
  assume ∈ x A {
    assume ∈ x singleton a {
      prove = x a
      prove ∈ a A
    }
    prove ¬ ∈ x singleton a
  }
}
prove = ∩ A singleton a ∅
prove function singleton orderedPair a b singleton a singleton b
prove function ∪ f singleton orderedPair a b ∪ A singleton a ∪ B singleton b
prove function ∪ f singleton orderedPair a b ∪ A singleton a B
  via = ∪ B singleton b B
qed
