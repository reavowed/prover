chapter Definition of a Function
Definition of a function.

statement function (f A B)
  name (a Function)
  format (f: A → B in parens)
  definition (∧ ⊆ f × A B ∀ x → ∈ x A ∃! y ∈ orderedPair x y f)

shorthand ∀ f → function f A B φ as ((∀f: A → B)φ)
shorthand ∃ f ∧ function f A B φ as ((∃f: A → B)φ)
shorthand ∃! f ∧ function f A B φ as ((∃!f: A → B)φ)

theorem Function Application Is Unique
premise function f A B
premise ∈ a A
prove ∧ ⊆ f × A B ∀ x → ∈ x A ∃! y ∈ orderedPair x y f
prove ∃! y ∈ orderedPair a y f
qed

term apply (f a)
  name (Function Application)
  format (f(a))
  premises (function f A B, ∈ a A)
  (∈ orderedPair a _ f)

theorem Function Is Subset of Product
premise function f A B
prove ∧ ⊆ f × A B ∀ x → ∈ x A ∃! y ∈ orderedPair x y f
prove ⊆ f × A B
qed

theorem First Coordinate of Element of Function Is Element of Domain
premise function f A B
premise ∈ orderedPair a b f
prove ⊆ f × A B
prove ∈ orderedPair a b × A B
prove ∈ a A
qed

theorem Second Coordinate of Element of Function Is Element of Range
premise function f A B
premise ∈ orderedPair a b f
prove ⊆ f × A B
prove ∈ orderedPair a b × A B
prove ∈ b B
qed

theorem Function Application Is Element of Range
premise function f A B
premise ∈ a A
prove ∈ orderedPair a apply f a f
prove ∈ apply f a B
qed

theorem Extend Function Range to Superset
premise function f A B
premise ⊆ B C elidable
prove ∧ ⊆ f × A B ∀ x → ∈ x A ∃! y ∈ orderedPair x y f
prove ⊆ f × A C
  via ⊆ × A B × A C
prove function f A C
qed

theorem Uniqueness of Function Application
premise function f A B
premise ∈ orderedPair a b f
prove ∈ a A
prove ∃! x ∈ orderedPair a x f
prove ∈ orderedPair a apply f a f
prove = b apply f a
qed

theorem Element of Function
premise function f A B
prove ⊆ f × A B
take x {
  assume ∈ x f {
    prove ∈ x × A B
    prove ∃ a ∧ ∈ a A ∃ b ∧ ∈ b B = x orderedPair a b
    let a ∧ ∈ a A ∃ b ∧ ∈ b B = x orderedPair a b {
      let b ∧ ∈ b B = x orderedPair a b {
        prove ∈ orderedPair a b f
        prove = b apply f a
        prove = x orderedPair a apply f a
        prove ∧ ∈ a A = x orderedPair a apply f a
        prove ∃ a ∧ ∈ a A = x orderedPair a apply f a
      }
    }
  }
  assume ∃ a ∧ ∈ a A = x orderedPair a apply f a {
    let a ∧ ∈ a A = x orderedPair a apply f a {
      prove ∈ orderedPair a apply f a f
      prove ∈ x f
    }
  }
}
prove ∀ x ↔ ∈ x f ∃ a ∧ ∈ a A = x orderedPair a apply f a
qed

theorem Functions with Same Values Are Equal
premise function f A B
premise function g A B
premise ∀ x → ∈ x A = apply f x apply g x
prove ∀ x ↔ ∈ x f ∃ a ∧ ∈ a A = x orderedPair a apply f a
prove ∀ x ↔ ∈ x g ∃ a ∧ ∈ a A = x orderedPair a apply g a
take x {
  assume ∃ a ∧ ∈ a A = x orderedPair a apply f a {
    let a ∧ ∈ a A = x orderedPair a apply f a {
      prove = apply f a apply g a
      prove ∧ ∈ a A = x orderedPair a apply g a
      prove ∃ a ∧ ∈ a A = x orderedPair a apply g a
    }
  }
  assume ∃ a ∧ ∈ a A = x orderedPair a apply g a {
    let a ∧ ∈ a A = x orderedPair a apply g a {
      prove = apply f a apply g a
      prove ∧ ∈ a A = x orderedPair a apply f a
      prove ∃ a ∧ ∈ a A = x orderedPair a apply f a
    }
  }
}
prove ∀ x ↔ ∃ a ∧ ∈ a A = x orderedPair a apply f a ∃ a ∧ ∈ a A = x orderedPair a apply g a
prove = f g
qed

theorem Function With Specified Values Is Unique
premise ∃ f ∧ function f A B ∀ x → ∈ x A = apply f x with x F
take f { take g {
  assume ∧ ∧ function f A B ∀ x → ∈ x A = apply f x with x F ∧ function g A B ∀ x → ∈ x A = apply g x with x F {
    take x {
      assume ∈ x A {
        prove = apply f x with x F
        prove = apply g x with x F
        prove = apply f x apply g x
      }
    }
    prove = f g
  }
}}
prove ∃! f ∧ function f A B ∀ x → ∈ x A = apply f x with x F
qed

theorem Function Space Is Unique
let S = S comprehension f powerSet × A B function f A B {
  take f {
    assume function f A B {
      prove ⊆ f × A B
      prove ∈ f powerSet × A B
      prove ∈ f S
    }
    assume ∈ f S {
      prove function f A B
    }
  }
  prove ∀ f ↔ ∈ f S function f A B
  prove ∃ S ∀ f ↔ ∈ f S function f A B
  prove ∃! S ∀ f ↔ ∈ f S function f A B
}
qed

term functionSpace (A B)
  name (Function Space)
  format (B^A)
  (∀ f ↔ ∈ f _ function f A B)

theorem Element of Function Space Is Function
premise ∈ f functionSpace A B
prove ∀ f ↔ ∈ f functionSpace A B function f A B
prove function f A B
qed
