assume ∨ s0 s2 {
  prove → s0 s1 3dee2da91a324273fff20924f29a7df9b6388f1f48ae09e93b292e42b3546ae7 (s0, s1) () p0
  prove → s2 s3 3dee2da91a324273fff20924f29a7df9b6388f1f48ae09e93b292e42b3546ae7 (s2, s3) () p1
  prove ∨ s1 s3 97bcdeccabac333a7f0a76ed5289689ef828c3dbae011352606d9bc0dcd93c75 (s0, s2, s1, s3) () 0a 0.0 0.1
}
assume ∨ s1 s3 {
  prove → s1 s0 282eb8b17a1260b27adcabbcf0e8b894697750b7d7f4fb3aacf467cf90ad46d6 (s0, s1) () p0
  prove → s3 s2 282eb8b17a1260b27adcabbcf0e8b894697750b7d7f4fb3aacf467cf90ad46d6 (s2, s3) () p1
  prove ∨ s0 s2 97bcdeccabac333a7f0a76ed5289689ef828c3dbae011352606d9bc0dcd93c75 (s1, s3, s0, s2) () 1a 1.0 1.1
}
prove ↔ ∨ s0 s2 ∨ s1 s3 df9994032af3276a9a030eb7b809e059dd53a14d6de2e12273242729e90a2a91 (∨ s0 s2, ∨ s1 s3) () 0 1
