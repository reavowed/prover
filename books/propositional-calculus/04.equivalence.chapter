Introduce the equivalence connective, ↔.

statement ↔ (φ ψ)
  definition (∧ → φ ψ → ψ φ)

theorem Equivalence by Both Cases
expansion
premise → φ ψ
premise → ψ φ
{
  assert ∧ → φ ψ → ψ φ direct bc1fc0568356141664497252cc943713e9412219fc93ad0255a3037abf24d00d (→ φ ψ, → ψ φ) () () () (direct p0, direct p1)
  assert ↔ φ ψ direct a5b1b34dbb6635875a431384c84fc52ac5805cc1dfee9c585436daab34e46fb6 (φ, ψ) () () () (direct 0)
}

theorem Reverse Equivalence
premise ↔ φ ψ
{
  assert ∧ → φ ψ → ψ φ direct 7f19797c54a26dad1234eb2dc1c99bde245b863055592b0eb89ac0d093318f99 (φ, ψ) () () () (direct p0)
  assert ∧ → ψ φ → φ ψ direct 8e72b548d5104b42ce2f1a1e0a1fee6a1a98971975218158732786113aa90494 (→ φ ψ, → ψ φ) () () () (direct 0)
  assert ↔ ψ φ direct a5b1b34dbb6635875a431384c84fc52ac5805cc1dfee9c585436daab34e46fb6 (ψ, φ) () () () (direct 1)
}

theorem Forward Implication from Equivalence
premise ↔ φ ψ
{
  assert ∧ → φ ψ → ψ φ direct 7f19797c54a26dad1234eb2dc1c99bde245b863055592b0eb89ac0d093318f99 (φ, ψ) () () () (direct p0)
  assert → φ ψ direct 594251b6ea5693171d3e341888c5d2e826933ccd9cf4f970bb3c11b0b66d455d (→ φ ψ, → ψ φ) () () () (direct 0)
}

theorem Reverse Implication from Equivalence
premise ↔ φ ψ
{
  assert ∧ → φ ψ → ψ φ direct 7f19797c54a26dad1234eb2dc1c99bde245b863055592b0eb89ac0d093318f99 (φ, ψ) () () () (direct p0)
  assert → ψ φ direct 79dae0450feb7d61abde03d698bc79179fafbebf10d10717ec2b63db8402478c (→ φ ψ, → ψ φ) () () () (direct 0)
}

theorem Modus Ponens (Equivalence)
premise ↔ φ ψ elidable
premise φ
{
  assert → φ ψ direct f52a64651ebe26ac0a89861f589c8ea822f14de99cc435c8115d97330a16dee9 (φ, ψ) () () () (direct p0)
  assert ψ direct fcb30f9b730a512f5115a87da8601fd980b1ac111cf3fdb118978263718c0066 (φ, ψ) () () () (direct 0, direct p1)
}

theorem Modus Ponens (Equivalence)
premise ↔ φ ψ elidable
premise ψ
{
  assert → ψ φ direct 65429f3e8963218e6bd1b43bd33d6ada4d6eb6a7f09ffb2b180910917684f0d5 (φ, ψ) () () () (direct p0)
  assert φ direct fcb30f9b730a512f5115a87da8601fd980b1ac111cf3fdb118978263718c0066 (ψ, φ) () () () (direct 0, direct p1)
}

theorem Equivalence Is Transitive
premise ↔ φ ψ
premise ↔ ψ χ
{
  assume φ {
    assert ψ direct be987a63ca0b4a37f0203f8c23b85c3fec9e519614e8dbffff6e66ed94e8910d (φ, ψ) () () () (direct p0, direct 0a)
    assert χ direct be987a63ca0b4a37f0203f8c23b85c3fec9e519614e8dbffff6e66ed94e8910d (ψ, χ) () () () (direct p1, direct 0.0)
  }
  assume χ {
    assert ψ direct bc63e6bb6c01863a6ac4d307023e340344146f589205caa08ccf425cfe294e79 (ψ, χ) () () () (direct p1, direct 1a)
    assert φ direct bc63e6bb6c01863a6ac4d307023e340344146f589205caa08ccf425cfe294e79 (φ, ψ) () () () (direct p0, direct 1.0)
  }
  assert ↔ φ χ direct 9e0a237dc75cb44e80e2401bebc55474cab9b9e31adef7f947be54b717825758 (φ, χ) () () () (compound 0a direct 0.1, compound 1a direct 1.1)
}

theorem Equivalence Is Transitive
premise ↔ φ ψ
premise ↔ χ ψ
{
  assert ↔ ψ χ direct 0d73a88c5af14f7eac09defe2f05ff8a357957bbd8936dbba2efbc450dcf1f6e (χ, ψ) () () () (direct p1)
  assert ↔ φ χ direct e831334d732135d832bd3ac83e0dba8855e79c596c5b2642510c909e139d251c (φ, ψ, χ) () () () (direct p0, direct 0)
}

theorem Equivalence Is Transitive
premise ↔ φ ψ
premise ↔ φ χ
{
  assert ↔ ψ φ direct 0d73a88c5af14f7eac09defe2f05ff8a357957bbd8936dbba2efbc450dcf1f6e (φ, ψ) () () () (direct p0)
  assert ↔ ψ χ direct e831334d732135d832bd3ac83e0dba8855e79c596c5b2642510c909e139d251c (ψ, φ, χ) () () () (direct 0, direct p1)
}

theorem True Statements Are Equivalent
premise φ
premise ψ
{
  assert → φ ψ direct 6ee39027f847a14ab4cebfaf1f4fabd1affab96c7ac5f3cea3dc9f40e10b587f (ψ, φ) () () () (direct p1)
  assert → ψ φ direct 6ee39027f847a14ab4cebfaf1f4fabd1affab96c7ac5f3cea3dc9f40e10b587f (φ, ψ) () () () (direct p0)
  assert ↔ φ ψ direct 9e0a237dc75cb44e80e2401bebc55474cab9b9e31adef7f947be54b717825758 (φ, ψ) () () () (direct 0, direct 1)
}

theorem False Statements Are Equivalent
premise ¬ φ
premise ¬ ψ
{
  assert → φ ψ direct bc0e42ba9a9d6091d0a65634441e963c4517c5cf7c51a446f53df6968701c144 (φ, ψ) () () () (direct p0)
  assert → ψ φ direct bc0e42ba9a9d6091d0a65634441e963c4517c5cf7c51a446f53df6968701c144 (ψ, φ) () () () (direct p1)
  assert ↔ φ ψ direct 9e0a237dc75cb44e80e2401bebc55474cab9b9e31adef7f947be54b717825758 (φ, ψ) () () () (direct 0, direct 1)
}

theorem Implication then Equivalence
premise → φ ψ
premise ↔ ψ χ
{
  assert → ψ χ direct f52a64651ebe26ac0a89861f589c8ea822f14de99cc435c8115d97330a16dee9 (ψ, χ) () () () (direct p1)
  assert → φ χ direct 5feeb1fdd8d15399c5ddbc7d32d268aa57fbe1dee02ca9e06a4074fc6a3fd9c6 (φ, ψ, χ) () () () (direct p0, direct 0)
}

theorem Equivalence then Implication
premise ↔ φ ψ
premise → ψ χ
{
  assert → φ ψ direct f52a64651ebe26ac0a89861f589c8ea822f14de99cc435c8115d97330a16dee9 (φ, ψ) () () () (direct p0)
  assert → φ χ direct 5feeb1fdd8d15399c5ddbc7d32d268aa57fbe1dee02ca9e06a4074fc6a3fd9c6 (φ, ψ, χ) () () () (direct 0, direct p1)
}
